{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunny\\\\OneDrive\\\\Desktop\\\\CV\\\\Sylo\\\\Crypto-Tracker\\\\code\\\\components\\\\CryptoCard\\\\CryptoCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card } from \"react-native-paper\";\nimport styles from \"./CryptoCard.styles\";\nimport { LineChart, Grid } from \"react-native-svg-charts\";\nimport * as shape from 'd3-shape';\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar CryptoCard = function (_React$Component) {\n  _inherits(CryptoCard, _React$Component);\n\n  var _super = _createSuper(CryptoCard);\n\n  function CryptoCard(props) {\n    var _this;\n\n    _classCallCheck(this, CryptoCard);\n\n    _this = _super.call(this);\n    _this.state = {\n      name: props.name,\n      logo: props.logo,\n      id: props.id,\n      symbol: props.symbol,\n      graphData: [],\n      rate: \"\",\n      navigation: props.navigation\n    };\n    return _this;\n  }\n\n  _createClass(CryptoCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://assets-api.sylo.io/v2/asset/id/\" + this.state.id + \"/rate?fiat=NZD&period=week&type=historic\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        json.history.map(function (i) {\n          _this2.state.graphData.push(i.rate);\n        });\n\n        _this2.setState({\n          assestHistorty: json,\n          rate: json.rate\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.state.navigation.navigate(\"details\", [_this3.state.assestHistorty, _this3.state.graphData, _this3.state.symbol]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        style: styles.containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.summaryView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: styles.logoStyle,\n        source: {\n          uri: this.state.logo\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.nameStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, \" \", this.state.name, \" \")), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: [styles.priceStyle, {\n          width: 60,\n          height: 21\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, \" \", this.state.rate, \" \"), React.createElement(Text, {\n        style: [styles.priceStyle, {\n          fontSize: 12,\n          marginTop: 0,\n          color: \"#33BB5D\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, \" \", this.state.change, \" \"))), React.createElement(View, {\n        style: {\n          flex: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, React.createElement(LineChart, {\n        data: this.state.graphData,\n        style: {\n          width: 353,\n          height: 66\n        },\n        curve: shape.curveBasis,\n        svg: {\n          stroke: \"rgba(241,90,41,0.8)\",\n          strokeWidth: 3\n        },\n        contentInset: {\n          top: 20,\n          bottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return CryptoCard;\n}(React.Component);\n\nexport { CryptoCard as default };","map":{"version":3,"sources":["C:/Users/sunny/OneDrive/Desktop/CV/Sylo/Crypto-Tracker/code/components/CryptoCard/CryptoCard.js"],"names":["React","useState","Card","styles","LineChart","Grid","shape","TouchableOpacity","CryptoCard","props","state","name","logo","id","symbol","graphData","rate","navigation","fetch","then","response","json","history","map","i","push","setState","assestHistorty","catch","e","console","log","navigate","containerStyle","summaryView","flexDirection","flex","logoStyle","uri","nameStyle","alignItems","priceStyle","width","height","fontSize","marginTop","color","change","curveBasis","stroke","strokeWidth","top","bottom","Component"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, Image } from \"react-native\";\r\nimport { Card } from \"react-native-paper\";\r\nimport styles from \"./CryptoCard.styles\";\r\nimport { LineChart, Grid} from \"react-native-svg-charts\";\r\nimport * as shape from 'd3-shape';\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\n\r\n\r\n// const [data, setData] = useState([]);\r\n// const data\r\n\r\n// fetch(\"https://assets-api.sylo.io/v2/asset/id/0xf293d23bf2cdc05411ca0eddd588eb1977e8dcd4:mainnet:ethereum/rate?fiat=NZD&period=week&type=historic\")\r\n// .then(response => response.json())\r\n// .then(response => data = response.history);\r\n\r\n\r\n\r\nexport default class CryptoCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            name: props.name,\r\n            logo: props.logo,\r\n            id: props.id,\r\n            symbol: props.symbol,\r\n            graphData: [],\r\n            rate: \"\",\r\n            navigation: props.navigation\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://assets-api.sylo.io/v2/asset/id/\" + this.state.id + \"/rate?fiat=NZD&period=week&type=historic\")\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                // if(json.rate > )\r\n                json.history.map(i => {\r\n                    this.state.graphData.push(i.rate)\r\n                }) \r\n                    \r\n                this.setState({\r\n                    assestHistorty: json,\r\n                    rate: json.rate\r\n                })\r\n            })\r\n            .catch(e => console.log(e));\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return(\r\n\r\n            <TouchableOpacity onPress={() => {this.state.navigation.navigate(\"details\", ([this.state.assestHistorty, this.state.graphData, this.state.symbol]))}}>\r\n                <Card style={styles.containerStyle}>\r\n                    {/* Child 1, summary view */}\r\n                    <View style={styles.summaryView}>\r\n                        {/* Logo and name */}\r\n                        <View style={{flexDirection: \"row\", flex: 1}}>\r\n                            <Image style={styles.logoStyle} source={{uri: this.state.logo}}/>\r\n                            <Text style={styles.nameStyle}> {this.state.name} </Text>\r\n                        </View>\r\n                        <View style={{flex: 1, alignItems: \"flex-end\"}}> \r\n                            <Text style={[styles.priceStyle, {width: 60, height:21}]}> {this.state.rate} </Text>\r\n                            <Text style={[styles.priceStyle, {fontSize:12, marginTop: 0, color: \"#33BB5D\"}]}> {this.state.change} </Text>\r\n                        </View>\r\n                    </View>\r\n\r\n                    {/* Child 2, Graph view */}\r\n                    <View style={{flex:3}}>\r\n                    <LineChart\r\n                            data={this.state.graphData}\r\n                            style={{width: 353, height: 66}}\r\n                            curve={shape.curveBasis}\r\n                            svg={{ stroke: \"rgba(241,90,41,0.8)\", strokeWidth: 3}}\r\n                            contentInset={{ top: 20, bottom: 20 }}\r\n                        >\r\n                        </LineChart>\r\n                    </View>\r\n                </Card>\r\n            </TouchableOpacity>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}